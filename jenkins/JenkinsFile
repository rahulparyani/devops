pipeline {
    agent { label 'LinuxNode' }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: 'refs/heads/${MainBranch}']], browser: [$class: 'BitbucketWeb', repoUrl: 'https://bitbucket.org/asitesol/adoddle/'], extensions: [[$class: 'IgnoreNotifyCommit'], [$class: 'CheckoutOption', timeout: 60], [$class: 'CloneOption', noTags: true, reference: '', shallow: false, timeout: 60], [$class: 'GitLFSPull']], userRemoteConfigs: [[credentialsId: 'bitbucketSSHKey', url: 'git@bitbucket.org:asitesol/adoddle.git']]])
            }
        }
        stage('Build'){
            steps{
                sh "sudo chmod +x gradlew"
                sh "./gradlew --no-daemon -i -s --build-file=adoddle-web-commons/build.gradle -Pversion=${Artifactversion} clean build artifactoryPublish -x test"
                sh "./gradlew --no-daemon -i -s -Pversion=${Artifactversion} clean build artifactoryPublish -x test"
            }
        }
        stage('Artifact Deploy'){
            steps{
                script {
                    sh '''
                        FOLDER2="${JOB_NAME}"
                        FOLDER=${FOLDER2%'-Pipeline'}
                        echo "$FOLDER2"
                        echo "$FOLDER"
                        if [ ! -d ${FolderOnLinux}/${FOLDER}/deployments ]; then  
                        mkdir -p ${FolderOnLinux}/${FOLDER}/deployments
                        fi
                        cp adoddle-ear/build/libs/*.ear ${FolderOnLinux}/${FOLDER}/deployments
                    '''
                }
            }
        }
        stage('Static RTD Copy'){
            steps{
                sh '''
                    FOLDER2="${JOB_NAME}"
                    FOLDER=${FOLDER2%'-Pipeline'}
                    echo "$FOLDER2"
                    echo "$FOLDER"
                    SRC="adoddle-web/build/adoddlesite/*"
                    echo $SRC
                    
                    TARGET="${FolderOnLinux}/${FOLDER}/static"
                    echo $TARGET
                    if [ -d $TARGET ]; then
                    	rm -rf ${TARGET}
                    fi
                    
                    TARGET="${FolderOnLinux}${FOLDER}/static/adoddlesite"
                    if [ ! -d $TARGET ]; then
                    	mkdir -p ${TARGET}
                    fi
                    sudo rsync -avzq $SRC $TARGET
                    
                    SRC="adoddle-common-api/build/swagger-ui"
                    echo $SRC
                    
                    if [ ! -d $TARGET ]; then
                    	mkdir -p ${TARGET}
                    fi
                    sudo rsync -avzqr $SRC $TARGET
                    '''
            }
        }
        stage('Deployment Call'){
            steps{
                script{
                    if(params.Deployment){
                        build wait: false, job: 'Adoddle1-Pipeline', parameters: [booleanParam(name: 'Properties', value: true), booleanParam(name: 'Ear', value: true), booleanParam(name: 'Static', value: true), booleanParam(name: 'Purge', value: true)]
                    }
                    else{
                        echo "Deployment call skipped since Deployment is not ticked"
                    }
                }
            }
        }
        stage('Archive Artifacts'){
            steps{
                archiveArtifacts allowEmptyArchive: true, artifacts: 'adoddle-ear/build/libs/*.ear', caseSensitive: false, defaultExcludes: false, onlyIfSuccessful: true
            }
        }
    }
    post{
        always{
            emailext attachLog: true, body: '${DEFAULT_CONTENT}', compressLog: true, subject: '${DEFAULT_SUBJECT}', to: '${DEFAULT_RECIPIENTS}'
        }
    }
}
