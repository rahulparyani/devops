---
- hosts: "{{ server1 }}"
  tasks:
  - name: First Server
    become: yes  
    script: /etc/ansible/roles/script/outputtest.py {{ server1 }}
    register: FirstServerStatus
    ignore_errors: True
    args:
     executable: python3
  - name: FirstServerOutPut
    debug:
     msg: "{{ FirstServerStatus.stdout_lines }}"
    when: "{{ FirstServerStatus.stdout is defined }}"
  - name: count
    debug:
     msg: "{{ FirstServerStatus.stdout.find('Go for next instance') }}"
    when: "{{ FirstServerStatus.stdout is defined }}"

- hosts: "{{ server2 }}"
  tasks:
  - name: Second Server
    become: yes  
    script: /etc/ansible/roles/script/outputtest.py {{ server2 }}
    register: SecondServerStatus
    ignore_errors: True
    args:
     executable: python3
    when: "{{ hostvars[server1].FirstServerStatus.stdout.find('Go for next instance') != -1 }}"
    notify:
    - SecondServerOutPut

  handlers:
  - name: SecondServerOutPut
    debug:
     msg: "{{ SecondServerStatus.stdout_lines }}"

  - name: count
    debug:
     msg: "{{ SecondServerStatus.stdout.find('Go for next instance') }}"
     
- hosts: "{{ server3 }}"
  tasks:
  - name: Third Server
    become: yes  
    script: /etc/ansible/roles/script/outputtest.py {{ server3 }}
    register: ThirdServerStatus
    ignore_errors: True
    args:
     executable: python3
    when: "{{ hostvars[server2].SecondServerStatus.stdout.find('Go for next instance') != -1 }}"
    notify:
    - ThirdServerOutPut

  handlers:
  - name: ThirdServerOutPut
    debug:
     msg: "{{ ThirdServerStatus.stdout_lines }}"

  - name: count
    debug:
     msg: "{{ ThirdServerStatus.stdout.find('Go for next instance') }}"

- hosts: "{{ AnsibleServer }}"
  tasks:
  - name: EmailNotification for All Server
    vars:
     FinalEmailBody: "{% if hostvars[server1].FirstServerStatus.stdout is defined %}{{ hostvars[server1].FirstServerStatus.stdout }}{%endif%} {% if hostvars[server2].SecondServerStatus.stdout is defined %}{{ hostvars[server2].SecondServerStatus.stdout }}{%endif%} {% if hostvars[server3].ThirdServerStatus.stdout is defined %}{{ hostvars[server3].ThirdServerStatus.stdout }}{%endif%}"
    become: yes
    script: /etc/ansible/roles/script/emailNotification.py {{ receivers }} {{ smtpserver }} "{{ FinalEmailBody }}"
    register: EmailOutput
    args:
     executable: python3
    notify:
    - OutputOfEmailNotification
  handlers:
  - name: OutputOfEmailNotification
    debug:
     msg: " {{ EmailOutput.stdout_lines }} "